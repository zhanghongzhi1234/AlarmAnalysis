<UserControl x:Class="MyList.AlarmList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TemplateProject"
             mc:Ignorable="d" 
             d:DesignHeight="342" d:DesignWidth="715">
    <Border Background="Black"  BorderBrush="Gray" BorderThickness="1">
        <ListView x:Name="listView" SelectionMode="Single" Background="Black" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Hidden">
            <!--ListView.ContextMenu>
                <ContextMenu Name ="AlarmDetailList" StaysOpen="true" Background="WhiteSmoke">
                    <ContextMenu.BitmapEffect>
                        <BitmapEffectGroup/>
                    </ContextMenu.BitmapEffect>
                    <MenuItem Header="Edit" Name="EditIVD" Click="EditIVD_Click" />
                    <MenuItem Header="Remove" Name="RemoveIVD" Click="RemoveIVD_Click" />
                </ContextMenu>
            </ListView.ContextMenu-->
            <ListView.Resources>
                <ContextMenu x:Key="ItemContextMenu">
                    <MenuItem x:Name="menuItem_Response" Click="menuItem_Response_Click" Header="Open Response Sheet">
                        <!--MenuItem.Icon>
                            <Image Source="/images/device.ico"></Image>
                        </MenuItem.Icon-->
                    </MenuItem>
                    <!--<MenuItem x:Name="menuItem_CopyPassword" Click="menuItem_CopyPassword_Click" Header="Copy Password">
                        <MenuItem.Icon>
                            <Image Source="/images/camera.ico"></Image>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem x:Name="menuItem_DeleteCreds" Header="Delete" Command="{Binding RemoveItem}"
                              CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}">
                        <MenuItem.Icon>
                            <Image Source="/images/power.ico"></Image>
                        </MenuItem.Icon>
                    </MenuItem>-->
                </ContextMenu>
                <local:MyColorConverter x:Key="myColorConverter"></local:MyColorConverter>
                <!-- Fill Brushes -->
                <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
                <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="Focusable" Value="false"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                <Border Name="Border" Margin="1" CornerRadius="2" Background="Black" BorderBrush="Black" BorderThickness="1">
                                    <Path HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="White" Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Focusable" Value="false"/>
                    <Setter Property="IsEnabled" Value="false"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                <Border Background="Transparent" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Focusable" Value="false"/>
                    <Setter Property="IsEnabled" Value="false"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Thumb}">
                                <Border CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
                    <Grid >
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="18"/>
                            <RowDefinition Height="0.00001*"/>
                            <RowDefinition MaxHeight="18"/>
                        </Grid.RowDefinitions>
                        <Border Grid.RowSpan="3" CornerRadius="2" Background="Black"/>
                        <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="20" Width="20" Command="ScrollBar.LineUpCommand" Content="M 0 16 L 8 0 L 16 16 Z" />
                        <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="Black" BorderBrush="Black" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                            </Track.IncreaseRepeatButton>
                        </Track>
                        <RepeatButton Grid.Row="2" Style="{StaticResource ScrollBarLineButton}" Height="20" Width="20" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 8 16 L 16 0 Z" />
                    </Grid>
                </ControlTemplate>

                <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
                    <Grid >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MaxWidth="18"/>
                            <ColumnDefinition Width="0.00001*"/>
                            <ColumnDefinition MaxWidth="18"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.ColumnSpan="3" CornerRadius="2" Background="Black" />
                        <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Height="20" Width="20" Command="ScrollBar.LineLeftCommand" Content="M 16 0 L 0 8 L 16 16 Z" />
                        <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1" Background="Black" BorderBrush="Black"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                            </Track.IncreaseRepeatButton>
                        </Track>
                        <RepeatButton Grid.Column="2" Style="{StaticResource ScrollBarLineButton}" Width="20" Height="20" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 16 8 L 0 16 Z"/>
                    </Grid>
                </ControlTemplate>

                <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Style.Triggers>
                        <!--Trigger Property="Orientation" Value="Horizontal">
                        <Setter Property="Width" Value="Auto"/>
                        <Setter Property="Height" Value="18" />
                        <Setter Property="Template" Value="{StaticResource DisabledHorizontalScrollBar}" />
                    </-->
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="Width" Value="18"/>
                            <Setter Property="Height" Value="Auto" />
                            <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.Resources>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                    <!--Setter Property="Background" Value="Transparent" /-->
                    <Setter Property="Background" Value="{Binding Path=BackColor,Converter={StaticResource myColorConverter}}" />
                    <Setter Property="Foreground" Value="{Binding Path=ForeColor,Converter={StaticResource myColorConverter}}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border BorderBrush="Transparent" BorderThickness="0" Background="{TemplateBinding Background}">
                                    <GridViewRowPresenter HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="Auto" Margin="0" Content="{TemplateBinding Content}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <EventSetter Event="PreviewMouseLeftButtonUp" Handler="ListViewItem_Click" />
                    <Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />
                    <!--Style.Triggers>
                        <DataTrigger Binding="{Binding Severity}" Value="1">
                            <Setter Property="Background" Value="Red" />
                            <Setter Property="Foreground" Value="White" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Severity}" Value="3">
                            <Setter Property="Background" Value="#984807" />
                            <Setter Property="Foreground" Value="White" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Severity}" Value="2">
                            <Setter Property="Background" Value="#632523" />
                            <Setter Property="Foreground" Value="White" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Background}" Value="MAJOR">
                            <Setter Property="Background" Value="#632523" />
                        </DataTrigger>
                    </Style.Triggers-->
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
                <GridView x:Name="gridView">
                    <GridView.ColumnHeaderContainerStyle>
                        <Style TargetType="{x:Type GridViewColumnHeader}">
                            <Setter Property="Background" Value="Black" />
                            <Setter Property="Foreground" Value="White" />
                        </Style>
                    </GridView.ColumnHeaderContainerStyle>
                    <!--GridViewColumn Header="Equipment Code" Width="150">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <Border BorderBrush="#FF000000" BorderThickness="1,1,0,0" Margin="-6,-2,-6,-2">
                                <StackPanel Margin="6,2,6,2">
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap" Text="{Binding EQPT}"/>
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <GridViewColumn Header="Alarm Description" Width="300">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <Border BorderBrush="#FF000000" BorderThickness="1,1,0,0" Margin="-6,-2,-6,-2">
                                <Grid Margin="6,2,6,2">
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap" Text="{Binding Description}"/>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>

                <GridViewColumn Header="Severity" Width="100">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <Border BorderBrush="#FF000000" BorderThickness="1,1,0,0" Margin="-6,-2,-6,-2">
                                <Grid Margin="6,2,6,2">
                                    <TextBlock  HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap" Text="{Binding Severity}"/>
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn-->
                </GridView>
            </ListView.View>
        </ListView>
    </Border>
</UserControl>
